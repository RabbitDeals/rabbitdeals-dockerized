services:
  # =======================
  # FRONTEND (NGINX)
  # =======================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
    restart: unless-stopped

  # =======================
  # API JAVA (SPRING BOOT)
  # =======================
  api:
    build:
      context: ./java-api
      dockerfile: Dockerfile
      args:
        GIT_REF: ${GIT_REF:-main}
    environment:
      SPRING_PROFILES_ACTIVE: produtivo

      # Mongo
      SPRING_DATA_MONGODB_URI: ${MONGODB_URI:-mongodb://mongodb:27017/produtosdb}

      # RabbitMQ
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER:-admin}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASS:-admin}

      # Actuator
      MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED: "true"

      # ðŸ‘‡ forÃ§a a classe principal correta
      SPRING_MAIN_MAIN_CLASS: com.rabbit_deals.RabbitDeals.RabbitDealsApplication
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  # =======================
  # PYTHON APP
  # =======================
  python-app:
    build:
      context: ./python-app
      dockerfile: Dockerfile
    environment:
      API_BASE_URL: http://api:8080
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_PASS: ${RABBITMQ_PASS:-admin}
      MONGODB_URI: ${MONGODB_URI:-mongodb://mongodb:27017/produtosdb}
    ports:
      - "5000:5000"
    depends_on:
      api:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  # =======================
  # MONGODB
  # =======================
  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  # =======================
  # MONGO EXPRESS
  # =======================
  mongo-express:
    image: mongo-express:1.0.2
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "8081:8081"
    restart: unless-stopped

  # =======================
  # RABBITMQ
  # =======================
  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-admin}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

volumes:
  mongo-data:
